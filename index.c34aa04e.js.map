{"mappings":"AAAA,MAAMA,EAAO,CACTC,OAAQC,SAASC,cAAc,QAC/BC,OAAQF,SAASC,cAAc,O,ICwBjCE,EAAe,C,KA1BJ,CAACC,EAAKC,KACf,IACE,MAAMC,EAAkBC,KAAKC,UAAUH,GACvCI,aAAaC,QAAQN,EAAKE,E,CAC1B,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,QAI/BT,IACZ,IACE,MAAME,EAAkBG,aAAaK,QAAQV,GAC7C,OAA2B,OAApBE,OAA2BS,EAAYR,KAAKS,MAAMV,E,CACzD,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,UAI7BT,IACd,IACEK,aAAaQ,WAAWb,E,CACxB,MAAOO,GACPC,QAAQM,IAAI,sBAAuBP,EAAME,Q,IDlBhCf,EEDVC,OAAOoB,iBAAiB,UAK7B,SAAuBC,GACrBA,EAAGC,iBAEH,MAAMC,EAAQF,EAAGG,cAAcC,SAAS,cAExC,GAA2B,KAAvBF,EAAMjB,MAAMoB,OACd,OAAOC,MAAM,4BAGf,GAA2B,KAAvBJ,EAAMjB,MAAMoB,OAAe,CAE7B,GADqBE,EAAMC,MAAKC,GAAMA,EAAGC,OAASR,EAAMjB,MAAMoB,SAE5D,OAAOC,MAAM,iC,CAIjB,MAAMK,EAAQ,CACZC,GAAIC,KAAKC,MACTJ,KAAMR,EAAMjB,OAGdsB,EAAMQ,KAAKJ,GAEX5B,EAAgBiC,KAzBA,eAyBgBT,GAEhCL,EAAMjB,MAAQ,E,IA5BhB,MAAMsB,EAAQ","sources":["src/js/refs.js","src/js/localstorage.js","src/js/toDos.js"],"sourcesContent":["const refs = {\n    formEl: document.querySelector('form'),\n    listEl: document.querySelector('ul')\n}\nexport default refs","const save = (key, value) => {\n    try {\n      const serializedState = JSON.stringify(value);\n      localStorage.setItem(key, serializedState);\n    } catch (error) {\n      console.error('Set state error: ', error.message);\n    }\n  };\n  \n  const load = (key) => {\n    try {\n      const serializedState = localStorage.getItem(key);\n      return serializedState === null ? undefined : JSON.parse(serializedState);\n    } catch (error) {\n      console.error('Get state error: ', error.message);\n    }\n  };\n  \n  const remove = (key) => {\n    try {\n      localStorage.removeItem(key);\n    } catch (error) {\n      console.log('Remove item error: ', error.message);\n    }\n  };\n  \n  export default {\n    save,\n    load,\n    remove,\n  };","import refs from './refs';\nimport localstorageApi from './localstorage';\n\nrefs.formEl.addEventListener('submit', onClickSubmit);\n\nconst items = [];\nconst LOCAL_KEY = 'items-to-dos';\n\nfunction onClickSubmit(ev) {\n  ev.preventDefault();\n\n  const input = ev.currentTarget.elements['user-todos'];\n\n  if (input.value.trim() === '') {\n    return alert('Todos souldn`t be empty!');\n  }\n\n  if (input.value.trim() !== '') {\n    const existingItem = items.find(el => el.text === input.value.trim());\n    if (existingItem) {\n      return alert('This task already is in to dos');\n    }\n  }\n\n  const toDos = {\n    id: Date.now(),\n    text: input.value,\n  };\n\n  items.push(toDos);\n\n  localstorageApi.save(LOCAL_KEY, items);\n\n  input.value = '';\n}\n"],"names":["$ee27a4d7c64fc8c4$var$refs","formEl","document","querySelector","listEl","$89a4baeedb6cdec9$export$2e2bcd8739ae039","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","getItem","undefined","parse","removeItem","log","addEventListener","ev","preventDefault","input","currentTarget","elements","trim","alert","$987ccf3cec1c52c9$var$items","find","el","text","toDos","id","Date","now","push","save"],"version":3,"file":"index.c34aa04e.js.map"}