{"mappings":"YAAA,IAAMA,EAAO,CACTC,OAAQC,SAASC,cAAc,QAC/BC,OAAQF,SAASC,cAAc,OCwBjCE,EAAe,CACbC,KA3BS,SAACC,EAAKC,GACf,IACE,IAAMC,EAAkBC,KAAKC,UAAUH,GACvCI,aAAaC,QAAQN,EAAKE,E,CAC1B,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,GAuB3CC,KAnBW,SAACV,GACZ,IACE,IAAME,EAAkBG,aAAaM,QAAQX,GAC7C,OAA2B,OAApBE,OAA2BU,EAAYT,KAAKU,MAAMX,E,CACzD,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,GAe3CK,OAXa,SAACd,GACd,IACEK,aAAaU,WAAWf,E,CACxB,MAAOO,GACPC,QAAQQ,IAAI,sBAAuBT,EAAME,Q,IDlBhChB,EEDVC,OAAOuB,iBAAiB,UAK7B,SAAuBC,GACrBA,EAAGC,iBAEH,IAAMC,EAAQF,EAAGG,cAAcC,SAAS,cAExC,GAA2B,KAAvBF,EAAMnB,MAAMsB,OACd,OAAOC,MAAM,4BAGf,GAA2B,KAAvBJ,EAAMnB,MAAMsB,OAAe,CAE7B,GADqBE,EAAMC,MAAK,SAAAC,G,OAAMA,EAAGC,OAASR,EAAMnB,MAAMsB,M,IAE5D,OAAOC,MAAM,iC,CAIjB,IAAMK,EAAQ,CACZC,GAAIC,KAAKC,MACTJ,KAAMR,EAAMnB,OAGdwB,EAAMQ,KAAKJ,GAEX/B,EAAgBC,KAzBA,eAyBgB0B,GAEhCL,EAAMnB,MAAQ,E,IA5BhB,IAAMwB,EAAQ,E","sources":["src/js/refs.js","src/js/localstorage.js","src/js/toDos.js"],"sourcesContent":["const refs = {\n    formEl: document.querySelector('form'),\n    listEl: document.querySelector('ul')\n}\nexport default refs","const save = (key, value) => {\n    try {\n      const serializedState = JSON.stringify(value);\n      localStorage.setItem(key, serializedState);\n    } catch (error) {\n      console.error('Set state error: ', error.message);\n    }\n  };\n  \n  const load = (key) => {\n    try {\n      const serializedState = localStorage.getItem(key);\n      return serializedState === null ? undefined : JSON.parse(serializedState);\n    } catch (error) {\n      console.error('Get state error: ', error.message);\n    }\n  };\n  \n  const remove = (key) => {\n    try {\n      localStorage.removeItem(key);\n    } catch (error) {\n      console.log('Remove item error: ', error.message);\n    }\n  };\n  \n  export default {\n    save,\n    load,\n    remove,\n  };","import refs from './refs';\nimport localstorageApi from './localstorage';\n\nrefs.formEl.addEventListener('submit', onClickSubmit);\n\nconst items = [];\nconst LOCAL_KEY = 'items-to-dos';\n\nfunction onClickSubmit(ev) {\n  ev.preventDefault();\n\n  const input = ev.currentTarget.elements['user-todos'];\n\n  if (input.value.trim() === '') {\n    return alert('Todos souldn`t be empty!');\n  }\n\n  if (input.value.trim() !== '') {\n    const existingItem = items.find(el => el.text === input.value.trim());\n    if (existingItem) {\n      return alert('This task already is in to dos');\n    }\n  }\n\n  const toDos = {\n    id: Date.now(),\n    text: input.value,\n  };\n\n  items.push(toDos);\n\n  localstorageApi.save(LOCAL_KEY, items);\n\n  input.value = '';\n}\n"],"names":["$37e33676934ad046$var$refs","formEl","document","querySelector","listEl","$50116558f77987dc$export$2e2bcd8739ae039","save","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","load","getItem","undefined","parse","remove","removeItem","log","addEventListener","ev","preventDefault","input","currentTarget","elements","trim","alert","$c5cfa7d378192afd$var$items","find","el","text","toDos","id","Date","now","push"],"version":3,"file":"index.4164e8b3.js.map"}