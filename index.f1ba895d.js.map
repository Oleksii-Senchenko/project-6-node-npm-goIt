{"mappings":"YAAA,IAIAA,EAJa,CACTC,OAAQC,SAASC,cAAc,QAC/BC,OAAQF,SAASC,cAAc,OCwBjCE,EAAe,CACbC,KA3BS,SAACC,EAAKC,GACf,IACE,IAAMC,EAAkBC,KAAKC,UAAUH,GACvCI,aAAaC,QAAQN,EAAKE,E,CAC1B,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,GAuB3CC,KAnBW,SAACV,GACZ,IACE,IAAME,EAAkBG,aAAaM,QAAQX,GAC7C,OAA2B,OAApBE,OAA2BU,EAAYT,KAAKU,MAAMX,E,CACzD,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,GAe3CK,OAXa,SAACd,GACd,IACEK,aAAaU,WAAWf,E,CACxB,MAAOO,GACPC,QAAQQ,IAAI,sBAAuBT,EAAME,Q,ICpBxC,SAASQ,EAAWC,GACzB,IAAMC,EAASD,EACZE,KAAI,SAAAC,GACH,MAAO,4CAEwCC,OAA1BD,EAAGE,KAAO,OAAS,GAAG,MAGrCD,OAHyCD,EAAGG,KAAK,qEAIlDF,OADCD,EAAGI,GACJ,wF,IAMNC,KAAK,IAERjC,EAAKI,OAAO8B,UAAYR,C,CCf1B1B,EAAKC,OAAOkC,iBAAiB,UAM7B,SAAuBC,GACrBA,EAAGC,iBAEH,IAAMC,EAAQF,EAAGG,cAAcC,SAAS,cAExC,GAA2B,KAAvBF,EAAM9B,MAAMiC,OACd,OAAOC,MAAM,6BAGf,GAA2B,KAAvBJ,EAAM9B,MAAMiC,OAAe,CAE7B,GADqBE,EAAMC,MAAK,SAAAhB,G,OAAMA,EAAGG,OAASO,EAAM9B,MAAMiC,M,IAE5D,OAAOC,MAAM,iC,CAIjB,IAAMG,EAAQ,CACZb,GAAIc,KAAKC,MACThB,KAAMO,EAAM9B,OAGdmC,EAAMK,KAAKH,GAEXxC,EAAgBC,KAAK2C,EAAWN,GAEhCL,EAAM9B,MAAQ,GACdgB,EAAWmB,E,IA/Bb,IAAMM,EAAY,eACdN,EAAQtC,EAAgBY,KAAKgC,IAAc,GAC/CzB,EAAWmB,GACX3C,EAAKI,OAAO+B,iBAAiB,SA+B7B,SAA0Be,GAExB,GADAnC,QAAQQ,IAAI2B,EAAIC,OAAOC,UACK,WAAxBF,EAAIC,OAAOC,SACb,OAEF,IAAMC,EAAUC,OAAOJ,EAAIC,OAAOI,QAAQvB,IAE1CR,EADAmB,EAAQA,EAAMa,QAAO,SAAA5B,G,OAAMA,EAAGI,KAAOqB,C,KAErChD,EAAgBC,KAAK2C,EAAWN,E","sources":["src/js/refs.js","src/js/localstorage.js","src/js/renderPage.js","src/js/toDos.js"],"sourcesContent":["const refs = {\n    formEl: document.querySelector('form'),\n    listEl: document.querySelector('ul')\n}\nexport default refs","const save = (key, value) => {\n    try {\n      const serializedState = JSON.stringify(value);\n      localStorage.setItem(key, serializedState);\n    } catch (error) {\n      console.error('Set state error: ', error.message);\n    }\n  };\n  \n  const load = (key) => {\n    try {\n      const serializedState = localStorage.getItem(key);\n      return serializedState === null ? undefined : JSON.parse(serializedState);\n    } catch (error) {\n      console.error('Get state error: ', error.message);\n    }\n  };\n  \n  const remove = (key) => {\n    try {\n      localStorage.removeItem(key);\n    } catch (error) {\n      console.log('Remove item error: ', error.message);\n    }\n  };\n  \n  export default {\n    save,\n    load,\n    remove,\n  };","import refs from './refs';\n\nexport function renderPage(items) {\n  const markup = items\n    .map(el => {\n      return `\n        <li>\n        <span class=\"text${el.done ? 'done' : ''}\">${el.text}</span>\n        <div>\n          <button type=\"button\" data-id=\"${\n            el.id\n          }\" class=\"delete\">Видалити</button>\n          \n        </div>\n        </li>\n      `;\n    })\n    .join('');\n\n  refs.listEl.innerHTML = markup;\n}\n","import refs from './refs';\nimport localstorageApi from './localstorage';\nimport { renderPage } from './renderPage';\n\nrefs.formEl.addEventListener('submit', onClickSubmit);\nconst LOCAL_KEY = 'items-to-dos';\nlet items = localstorageApi.load(LOCAL_KEY) || [];\nrenderPage(items);\nrefs.listEl.addEventListener('click', onClickDeleteBtn);\n\nfunction onClickSubmit(ev) {\n  ev.preventDefault();\n\n  const input = ev.currentTarget.elements['user-todos'];\n\n  if (input.value.trim() === '') {\n    return alert('Todos shouldn`t be empty!');\n  }\n\n  if (input.value.trim() !== '') {\n    const existingItem = items.find(el => el.text === input.value.trim());\n    if (existingItem) {\n      return alert('This task already is in to dos');\n    }\n  }\n\n  const toDos = {\n    id: Date.now(),\n    text: input.value,\n  };\n\n  items.push(toDos);\n\n  localstorageApi.save(LOCAL_KEY, items);\n\n  input.value = '';\n  renderPage(items);\n}\n\nfunction onClickDeleteBtn(evt) {\n  console.log(evt.target.nodeName);\n  if (evt.target.nodeName !== 'BUTTON') {\n    return;\n  }\n  const todosId = Number(evt.target.dataset.id);\n  items = items.filter(el => el.id !== todosId);\n  renderPage(items);\n  localstorageApi.save(LOCAL_KEY, items);\n}\n"],"names":["$37e33676934ad046$export$2e2bcd8739ae039","formEl","document","querySelector","listEl","$50116558f77987dc$export$2e2bcd8739ae039","save","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","load","getItem","undefined","parse","remove","removeItem","log","$08a54f4338daa322$export$224298a172524123","items","markup","map","el","concat","done","text","id","join","innerHTML","addEventListener","ev","preventDefault","input","currentTarget","elements","trim","alert","$c5cfa7d378192afd$var$items","find","toDos","Date","now","push","$c5cfa7d378192afd$var$LOCAL_KEY","evt","target","nodeName","todosId","Number","dataset","filter"],"version":3,"file":"index.f1ba895d.js.map"}