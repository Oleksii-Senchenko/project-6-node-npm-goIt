{"mappings":"IAIAA,EAJa,CACTC,OAAQC,SAASC,cAAc,QAC/BC,OAAQF,SAASC,cAAc,O,ICwBjCE,EAAe,C,KA1BJ,CAACC,EAAKC,KACf,IACE,MAAMC,EAAkBC,KAAKC,UAAUH,GACvCI,aAAaC,QAAQN,EAAKE,E,CAC1B,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,QAI/BT,IACZ,IACE,MAAME,EAAkBG,aAAaK,QAAQV,GAC7C,OAA2B,OAApBE,OAA2BS,EAAYR,KAAKS,MAAMV,E,CACzD,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,UAI7BT,IACd,IACEK,aAAaQ,WAAWb,E,CACxB,MAAOO,GACPC,QAAQM,IAAI,sBAAuBP,EAAME,Q,ICpBxC,SAASM,EAAWC,GACzB,MAAMC,EAASD,EACZE,KAAIC,GACI,4CAEcA,EAAGC,KAAO,OAAS,OAAOD,EAAGE,wEAG5CF,EAAGG,4FAOVC,KAAK,IAER7B,EAAKI,OAAO0B,UAAYP,C,CCf1BvB,EAAKC,OAAO8B,iBAAiB,UAM7B,SAAuBC,GACrBA,EAAGC,iBAEH,MAAMC,EAAQF,EAAGG,cAAcC,SAAS,cAExC,GAA2B,KAAvBF,EAAM3B,MAAM8B,OACd,OAAOC,MAAM,6BAGf,GAA2B,KAAvBJ,EAAM3B,MAAM8B,OAAe,CAE7B,GADqBE,EAAMC,MAAKf,GAAMA,EAAGE,OAASO,EAAM3B,MAAM8B,SAE5D,OAAOC,MAAM,iC,CAIjB,MAAMG,EAAQ,CACZb,GAAIc,KAAKC,MACThB,KAAMO,EAAM3B,OAGdgC,EAAMK,KAAKH,GAEXpC,EAAgBwC,KA5BA,eA4BgBN,GAEhCL,EAAM3B,MAAQ,GACdc,EAAWkB,E,IA9Bb,IAAIA,EAAQlC,EAAgByC,KADV,iBAC6B,GAC/CzB,EAAWkB,GACXvC,EAAKI,OAAO2B,iBAAiB,SA+B7B,SAA0BgB,GAExB,GADAjC,QAAQM,IAAI2B,EAAIC,OAAOC,UACK,WAAxBF,EAAIC,OAAOC,SACb,OAEF,MAAMC,EAAUC,OAAOJ,EAAIC,OAAOI,QAAQxB,IAC1CW,EAAQA,EAAMc,QAAO5B,GAAMA,EAAGG,KAAOsB,IACrC7B,EAAWkB,GACXlC,EAAgBwC,KA1CA,eA0CgBN,E","sources":["src/js/refs.js","src/js/localstorage.js","src/js/renderPage.js","src/js/toDos.js"],"sourcesContent":["const refs = {\n    formEl: document.querySelector('form'),\n    listEl: document.querySelector('ul')\n}\nexport default refs","const save = (key, value) => {\n    try {\n      const serializedState = JSON.stringify(value);\n      localStorage.setItem(key, serializedState);\n    } catch (error) {\n      console.error('Set state error: ', error.message);\n    }\n  };\n  \n  const load = (key) => {\n    try {\n      const serializedState = localStorage.getItem(key);\n      return serializedState === null ? undefined : JSON.parse(serializedState);\n    } catch (error) {\n      console.error('Get state error: ', error.message);\n    }\n  };\n  \n  const remove = (key) => {\n    try {\n      localStorage.removeItem(key);\n    } catch (error) {\n      console.log('Remove item error: ', error.message);\n    }\n  };\n  \n  export default {\n    save,\n    load,\n    remove,\n  };","import refs from './refs';\n\nexport function renderPage(items) {\n  const markup = items\n    .map(el => {\n      return `\n        <li>\n        <span class=\"text${el.done ? 'done' : ''}\">${el.text}</span>\n        <div>\n          <button type=\"button\" data-id=\"${\n            el.id\n          }\" class=\"delete\">Видалити</button>\n          \n        </div>\n        </li>\n      `;\n    })\n    .join('');\n\n  refs.listEl.innerHTML = markup;\n}\n","import refs from './refs';\nimport localstorageApi from './localstorage';\nimport { renderPage } from './renderPage';\n\nrefs.formEl.addEventListener('submit', onClickSubmit);\nconst LOCAL_KEY = 'items-to-dos';\nlet items = localstorageApi.load(LOCAL_KEY) || [];\nrenderPage(items);\nrefs.listEl.addEventListener('click', onClickDeleteBtn);\n\nfunction onClickSubmit(ev) {\n  ev.preventDefault();\n\n  const input = ev.currentTarget.elements['user-todos'];\n\n  if (input.value.trim() === '') {\n    return alert('Todos shouldn`t be empty!');\n  }\n\n  if (input.value.trim() !== '') {\n    const existingItem = items.find(el => el.text === input.value.trim());\n    if (existingItem) {\n      return alert('This task already is in to dos');\n    }\n  }\n\n  const toDos = {\n    id: Date.now(),\n    text: input.value,\n  };\n\n  items.push(toDos);\n\n  localstorageApi.save(LOCAL_KEY, items);\n\n  input.value = '';\n  renderPage(items);\n}\n\nfunction onClickDeleteBtn(evt) {\n  console.log(evt.target.nodeName);\n  if (evt.target.nodeName !== 'BUTTON') {\n    return;\n  }\n  const todosId = Number(evt.target.dataset.id);\n  items = items.filter(el => el.id !== todosId);\n  renderPage(items);\n  localstorageApi.save(LOCAL_KEY, items);\n}\n"],"names":["$ee27a4d7c64fc8c4$export$2e2bcd8739ae039","formEl","document","querySelector","listEl","$89a4baeedb6cdec9$export$2e2bcd8739ae039","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","getItem","undefined","parse","removeItem","log","$35780a5662e3ee94$export$224298a172524123","items","markup","map","el","done","text","id","join","innerHTML","addEventListener","ev","preventDefault","input","currentTarget","elements","trim","alert","$987ccf3cec1c52c9$var$items","find","toDos","Date","now","push","save","load","evt","target","nodeName","todosId","Number","dataset","filter"],"version":3,"file":"index.135c9f22.js.map"}